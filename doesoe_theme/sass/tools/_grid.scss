
/*
 * This creates a grid of $cols items (eg 3). Will auto clear each row.
 * Optionally supply a col count at medium breakpoint.
 */
@mixin grid($cols, $col-selector: '> *', $med-cols: 1, $med-bp: small, $large-bp: xlarge) {
  @include pie-clearfix();
  $half-cols: $cols / 2;
  $colsize: 100% / $cols;

  // Selector for a column.
  #{$col-selector} {
    @include pie-clearfix();

    // Medium breakpoint (optional)
    @if $med-cols > 1 {
      $med-colsize: 100% / $med-cols;
      @include at-bp($med-bp) {
        @include span($med-colsize);
        &:nth-child(#{$med-cols}n + 1) {
          clear: left;
        }
      }
    }

    // Large breakpoint (where grid kicks in)
    @include at-bp($large-bp) {
      @include span($colsize);
      padding-right: $three-qtr-spacing-unit;
      // Clear new lines.
      @if $med-cols > 1 {
        &:nth-child(#{$med-cols}n + 1) {
          clear: none;
        }
      }
      &:nth-child(#{$cols}n + 1) {
        clear: left;
      }
    }
  }
}

/*
 * This creates a column grid of $cols items. Items display in column order.
 */
@mixin column-grid($cols, $col-selector: '> *', $med-cols: 1, $med-bp: small, $large-bp: xlarge) {

  @if $med-cols > 1 {
    @include at-bp($med-bp) {
      column-count: $med-cols;
      column-gap: $base-spacing-unit;
      #{$col-selector} {
        break-inside: avoid;
        display: inline-block;
      }
    }
  }

  @include at-bp($large-bp) {
    column-count: $cols;
    column-gap: $base-spacing-unit;
    #{$col-selector} {
      break-inside: avoid;
      display: inline-block;
    }
  }
}